// <auto-generated />
using System;
using Faoem.Variable.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Faoem.Variable.Migrations.Sqlite
{
    [DbContext(typeof(SqliteVariableDbContext))]
    [Migration("20240719064421_000000")]
    partial class _000000
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Faoem.Variable.Models.ArchivedVariable", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("ArchiveInterval")
                        .HasColumnType("INTEGER")
                        .HasColumnName("archive_interval");

                    b.Property<byte>("ArchiveMode")
                        .HasColumnType("INTEGER")
                        .HasColumnName("archive_mode");

                    b.Property<byte>("ArchiveType")
                        .HasColumnType("INTEGER")
                        .HasColumnName("archive_type");

                    b.Property<string>("ConnectionName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasColumnName("connection_name");

                    b.Property<string>("ConnectorInstance")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasColumnName("connector_instance");

                    b.Property<string>("DataPoint")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasColumnName("data_point");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT");

                    b.Property<string>("DefinitionId")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT")
                        .HasColumnName("definition_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("variable_archived_variable", (string)null);
                });

            modelBuilder.Entity("Faoem.Variable.Models.ArchivedVariableModuleMap", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("ArchivedVariableId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("archived_variable_id");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("TEXT")
                        .HasColumnName("module_id");

                    b.HasKey("Id");

                    b.HasIndex("ArchivedVariableId");

                    b.ToTable("variable_archived_variable_module_map", (string)null);
                });

            modelBuilder.Entity("Faoem.Variable.Models.ArchivedVariableModuleMap", b =>
                {
                    b.HasOne("Faoem.Variable.Models.ArchivedVariable", "ArchivedVariable")
                        .WithMany("UsedBy")
                        .HasForeignKey("ArchivedVariableId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("ArchivedVariable");
                });

            modelBuilder.Entity("Faoem.Variable.Models.ArchivedVariable", b =>
                {
                    b.Navigation("UsedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
