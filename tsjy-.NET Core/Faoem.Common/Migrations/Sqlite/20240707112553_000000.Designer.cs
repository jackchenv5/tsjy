// <auto-generated />
using System;
using Faoem.Common.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Faoem.Common.Migrations.Sqlite
{
    [DbContext(typeof(SqliteCommonDbContext))]
    [Migration("20240707112553_000000")]
    partial class _000000
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("Faoem.Common.Models.Captcha", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<int>("Code")
                        .HasColumnType("INTEGER")
                        .HasColumnName("code");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<long>("ExpireTime")
                        .HasColumnType("INTEGER")
                        .HasColumnName("expire_time");

                    b.Property<string>("LowerEmail")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("lower_email");

                    b.HasKey("Id");

                    b.ToTable("common_captcha", (string)null);
                });

            modelBuilder.Entity("Faoem.Common.Models.Menu", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<bool>("IsSubMenu")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_sub_menu");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("label");

                    b.Property<string>("LowerLabel")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("lower_label");

                    b.Property<string>("LowerRoute")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("lower_route");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER")
                        .HasColumnName("order");

                    b.Property<long?>("ParentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("parent_id");

                    b.Property<string>("Route")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("route");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("common_menu", (string)null);
                });

            modelBuilder.Entity("Faoem.Common.Models.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasColumnName("id");

                    b.Property<string>("ActionDescription")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("action_description");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasColumnName("controller_name");

                    b.Property<string>("HttpMethod")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("TEXT")
                        .HasColumnName("http_method");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("route");

                    b.HasKey("Id");

                    b.ToTable("common_permission", (string)null);
                });

            modelBuilder.Entity("Faoem.Common.Models.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("LowerRoleName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("lower_role_name");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("role_name");

                    b.HasKey("Id");

                    b.ToTable("common_role", (string)null);
                });

            modelBuilder.Entity("Faoem.Common.Models.RoleMenu", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role_id");

                    b.Property<long>("MenuId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("menu_id");

                    b.HasKey("RoleId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("common_role_menu", (string)null);
                });

            modelBuilder.Entity("Faoem.Common.Models.RolePermission", b =>
                {
                    b.Property<long>("RoleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role_id");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("TEXT")
                        .HasColumnName("permission_id");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("common_role_permission", (string)null);
                });

            modelBuilder.Entity("Faoem.Common.Models.Setting", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("key");

                    b.Property<string>("Value")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("common_setting", (string)null);
                });

            modelBuilder.Entity("Faoem.Common.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("CreatedAt")
                        .HasColumnType("INTEGER")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("full_name");

                    b.Property<long>("LastLogin")
                        .HasColumnType("INTEGER")
                        .HasColumnName("last_login");

                    b.Property<string>("LowerEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnName("lower_email");

                    b.Property<string>("LowerUsername")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("lower_username");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT")
                        .HasColumnName("password_hash");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("salt");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.ToTable("common_user", (string)null);
                });

            modelBuilder.Entity("Faoem.Common.Models.UserRole", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("user_id");

                    b.Property<long>("RoleId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("common_user_role", (string)null);
                });

            modelBuilder.Entity("Faoem.Common.Models.Menu", b =>
                {
                    b.HasOne("Faoem.Common.Models.Menu", "ParentMenu")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ParentMenu");
                });

            modelBuilder.Entity("Faoem.Common.Models.RoleMenu", b =>
                {
                    b.HasOne("Faoem.Common.Models.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Faoem.Common.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Faoem.Common.Models.RolePermission", b =>
                {
                    b.HasOne("Faoem.Common.Models.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Faoem.Common.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Faoem.Common.Models.UserRole", b =>
                {
                    b.HasOne("Faoem.Common.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Faoem.Common.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Faoem.Common.Models.Menu", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
